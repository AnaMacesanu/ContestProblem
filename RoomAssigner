import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import java.util.TreeMap;
public class RoomAssigner
{
    public static void main(String[] args)
    {
	    Scanner input = new Scanner(System.in);
    	int numStudents = input.nextInt();
    	int numRegRooms = input.nextInt();
    	int numAccRooms = input.nextInt();
    	input.nextLine();
    	ArrayList<String> regStudents = new ArrayList<>();
    	ArrayList<String> accStudents = new ArrayList<>();
    	
    	for(int i = 0; i < numStudents; i++)
    	{
    		String name = input.nextLine();
    		name = name.substring(name.lastIndexOf(" ")+1) + ", " + name.substring(0, name.lastIndexOf(" "));
    		if(name.contains("-tier"))
    		{
    			name = name.substring(name.indexOf("-tier")+5, name.indexOf("-tier")+6) + name.substring(0, name.indexOf("-tier"))
    			+ name.substring(name.indexOf("-tier") +6);  //this will format the name to go from Ana Macesanu-tier2 to 2Macesanu, Ana
	    		accStudents.add(name);
    		}
		    else
			    regStudents.add(name);
	    }
	    Collections.sort(regStudents);
	    
        //first lets organize the regular students
        int numPerRoom = (int) regStudents.size() / numRegRooms;
		int numLeftOver = numRegRooms % numPerRoom;
        for(int i = 1; i <= numRegRooms; i++)
        {
            System.out.println("Room " + i);
            for(int j = 0; j < numPerRoom; j++)
            {
                System.out.println(regStudents.remove(0));
				if(j == numPerRoom-1 && numLeftOver > 0)
				{
					numLeftOver--;
					System.out.println(regStudents.remove(0));
				}
            }
            System.out.println(" ");        
        }
        //everything above this works properly 
        
        //now lets do the accommodation rooms
        ArrayList<String> tier1 = new ArrayList<>();
        ArrayList<String> tier2 = new ArrayList<>();
        ArrayList<String> tier3 = new ArrayList<>();
        for(int i = 0; i < accStudents.size(); i++)
        {
        	if(accStudents.get(i).substring(0,1).equals("1"))
        		tier1.add(accStudents.get(i).substring(1));
        	else if(accStudents.get(i).substring(0,1).equals("2"))
        		tier2.add(accStudents.get(i).substring(1));
        	else if(accStudents.get(i).substring(0,1).equals("3"))
        		tier3.add(accStudents.get(i).substring(1));
        }
        int numTiers = 0;
        if(tier1.size()>0)
        	numTiers++;
        if(tier2.size()>0)
        	numTiers++;
        if(tier3.size()>0)
        	numTiers++;
        int NumRoomPerTier = 0;
        if(numTiers != 0)
        	NumRoomPerTier = numAccRooms / numTiers;
        
        Collections.sort(tier1);
        Collections.sort(tier2);
        Collections.sort(tier3);
        
        //tier1 room assignments
        int numPerAccRoom1 = tier1.size() / NumRoomPerTier;
        int numLeftOver1 = tier1.size() % NumRoomPerTier;
        for(int i = 1; i <= NumRoomPerTier; i++)
        {
            System.out.println("Tier1 Room " + i);
            for(int j = 0; j < numPerAccRoom1; j++)
            {
                System.out.println(tier1.remove(0));
				if(j == numPerAccRoom1-1 && numLeftOver1 > 0)
				{
					
					numLeftOver1--;
					System.out.println(tier1.remove(0));
				}
            }
            System.out.println(" ");        
        }
        
        
        //tier2 room assignments
        int numPerAccRoom2 = tier2.size() / NumRoomPerTier;
        int numLeftOver2 = tier2.size() % NumRoomPerTier;
        for(int i = 1; i <= NumRoomPerTier; i++)
        {
            System.out.println("Tier2 Room " + i);
            for(int j = 0; j < numPerAccRoom2; j++)
            {
                System.out.println(tier2.remove(0));
				if(j == numPerAccRoom2-1 && numLeftOver2 > 0)
				{
					
					numLeftOver2--;
					System.out.println(tier2.remove(0));
				}
            }
            System.out.println(" ");        
        }
        
        //tier3 room assignments
        int numPerAccRoom3 = tier3.size() / NumRoomPerTier;
        int numLeftOver3 = tier3.size() % NumRoomPerTier;
        for(int i = 1; i <= NumRoomPerTier; i++)
        {
            System.out.println("Tier3 Room " + i);
            for(int j = 0; j < numPerAccRoom3; j++)
            {
                System.out.println(tier3.remove(0));
				if(j == numPerAccRoom3-1 && numLeftOver3 > 0)
				{
					
					numLeftOver3--;
					System.out.println(tier3.remove(0));
				}
            }
            System.out.println(" ");        
        }
    }

}
